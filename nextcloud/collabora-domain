server {
    access_log /var/log/nginx/[shorteneddomainname].access.log;
    error_log  /var/log/nginx/[shorteneddomainname].error.log;

    listen 443 ssl http2;

    ssl on;
    ssl_certificate /etc/letsencrypt/live/[domainname]/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/[domainname]/privkey.pem;
  # ssl_dhparam /etc/letsencrypt/live/[domainname]/dhparam4096.pem;    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    # Add secure headers
    #add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    #add_header X-Content-Type-Options "nosniff";
    
    server_name [domainname];
    set $upstream [internalip];

    location ^~ /loleaflet {
            proxy_pass https://$upstream:9980;
            proxy_set_header Host $http_host;
    }
    location ^~ /hosting/discovery {
            proxy_pass https://$upstream:9980;
            proxy_set_header Host $http_host;
    }
    location ^~ /lool {
            proxy_pass https://$upstream:9980;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
    }

}
server {
  listen 80;
  server_name [domainname];
  return 301 https://[domainname]$request_uri;
}
 
